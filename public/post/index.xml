<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post on Khoshrozeh</title>
    <link>https://akhoshrozeh.github.io/khoshrozeh.com/post/</link>
    <description>Recent content in Post on Khoshrozeh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Sep 2023 00:25:08 +0800</lastBuildDate><atom:link href="https://akhoshrozeh.github.io/khoshrozeh.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reliable, Scalable, and Maintainable Applications</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/DDIA-ch1/</link>
      <pubDate>Fri, 29 Dec 2023 17:05:43 -0500</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/DDIA-ch1/</guid>
      <description>Note: The following information comes Martin Kleppmann&amp;rsquo;s &amp;ldquo;Designing Data-Intensive Applications&amp;rdquo;. The following post is a recap/discussion of ideas from Chapter 1.
Introduction In this post, we&amp;rsquo;re going to look at what we mean by the terms reliable, scalable and maintainable. We&amp;rsquo;re also going to examine how we can try to achieve these goals for our system.
Apps are data intensive, not computationally expensive
problems: amount, complexity, and rate of change of data</description>
    </item>
    
    <item>
      <title>Network Device Hardening</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/network-device-hardening/</link>
      <pubDate>Thu, 28 Sep 2023 18:11:55 +0800</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/network-device-hardening/</guid>
      <description>Introduction In this post, I&amp;rsquo;m going to go over some common threats and hardening techniques for various network devices including VPNs, routers, switches and more. Since organizations&amp;rsquo; networks are almost always a critical aspect of their security, it is important that the proper steps are taken to secure it. While no system can ever be 100% secure, we still can greatly reduce the organization&amp;rsquo;s risk by preventing, detecting and responding appropriately and promptly to attacks.</description>
    </item>
    
    <item>
      <title>CTF Writeup: Lian Yu</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/lian-yu-writeup/</link>
      <pubDate>Wed, 27 Sep 2023 17:48:51 +0800</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/lian-yu-writeup/</guid>
      <description>Introduction This CTF looks pretty straightforward based on the questions. I think I&amp;rsquo;ll try and do a speed run on it and do the writeup at the same time.
These are the questions:
What is the Web Directory you found? what is the file name you found? what is the FTP Password? what is the file name with SSH password? user.txt root.txt Let&amp;rsquo;s go!
CTF Directory enumeration: gobuster dir -u http://10.</description>
    </item>
    
    <item>
      <title>Stabilizing Shells</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/stabilizing-shell/</link>
      <pubDate>Tue, 26 Sep 2023 16:00:46 +0800</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/stabilizing-shell/</guid>
      <description>Introduction Spawning shells in CTFs and pentesting is an extremely common task and we don&amp;rsquo;t want to have to deal getting disconnected from target, as well as the inconvenience of using a shell with limited shortcuts and controls. Here are 3 methods to stabilize your shell. Personally, I like to use Technique 1 in CTFs.
Technique 1: Python Applicable to on Linux, since they almost always have Python installed.
python -c &#39;import pty;pty.</description>
    </item>
    
    <item>
      <title>CTF Writeup: Break Out the Cage</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/break-out-the-cage/</link>
      <pubDate>Mon, 25 Sep 2023 21:52:54 +0800</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/break-out-the-cage/</guid>
      <description>Introduction This CTF on TryHackMe has no instructions and only three questions:
What is Weston&amp;rsquo;s password? What&amp;rsquo;s the user flag? What&amp;rsquo;s the root flag? Let&amp;rsquo;s spin up the virtual machine and get hacking.
Break Out the Cage The only clue we start with is there&amp;rsquo;s a person named Weston.
We&amp;rsquo;ll start with a TCP SYN port scan to see services are running, as well as gathering the service and OS information.</description>
    </item>
    
    <item>
      <title>Recon Tactics and Tools with TomNomNom</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/tomnomnom-recon-tools/</link>
      <pubDate>Mon, 25 Sep 2023 13:51:05 +0800</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/tomnomnom-recon-tools/</guid>
      <description>Introduction In this post I&amp;rsquo;m going to go over some reconnaissance tools, most of them built by well known and respected hacker TomNomNom, or Tom Hudson. I&amp;rsquo;m also going to cover some of his methodologies and techinques, for example how he utilizes VIM in his recon.
You can find and install his tools from his github.
I&amp;rsquo;m going to demonstrate some of these tactics on Admiral Labs which currently has a bug bounty on HackerOne.</description>
    </item>
    
    <item>
      <title>CTF Writeup: OWASP Juice Shop</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/owasp-juice-shop-writeup/</link>
      <pubDate>Fri, 22 Sep 2023 01:58:01 +0800</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/owasp-juice-shop-writeup/</guid>
      <description>Introduction This CTF is called &amp;ldquo;OWASP Juice Shop&amp;rdquo; and is on the TryHackMe platform. It focuses on the following security concerns from the OWASP Top 10: Injection, Broken Authentication, Sensitive Data Exposure, Broken Access Control and Cross-Site Scripting (XSS). Let&amp;rsquo;s get started.
Task 1 This is simply spinning up the virtual machine and connecting to it through TryHackMe&amp;rsquo;s VPN. It is recommended to be familiar with Burp.
Task 2 We do some basic reconnaissance: just walking the applicaion.</description>
    </item>
    
    <item>
      <title>CTF Writeup: RootMe</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/rootme-writeup/</link>
      <pubDate>Thu, 21 Sep 2023 14:04:57 +0800</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/rootme-writeup/</guid>
      <description>Introduction Here, I&amp;rsquo;m going to show how I solved the RootMe CTF on TryHackMe. It&amp;rsquo;s supposed to be for beginners so let&amp;rsquo;s jump in and find out!
Reconnaissance Weâ€™ll start with nmap to run a TCP SYN scan with some parallelism and collect service version information as well:
sudo nmap -sS -sV --min-parallelism 20 10.10.48.220
Note: we need to run SYN scans with escalated privileges because it is a more stealthy scan than say a TCP Connect scan.</description>
    </item>
    
  </channel>
</rss>
