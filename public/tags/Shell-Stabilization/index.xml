<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell Stabilization on Khoshrozeh</title>
    <link>https://akhoshrozeh.github.io/khoshrozeh.com/tags/Shell-Stabilization/</link>
    <description>Recent content in Shell Stabilization on Khoshrozeh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Sep 2023 16:00:46 +0800</lastBuildDate><atom:link href="https://akhoshrozeh.github.io/khoshrozeh.com/tags/Shell-Stabilization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stabilizing Shells</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/stabilizing-shell/</link>
      <pubDate>Tue, 26 Sep 2023 16:00:46 +0800</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/stabilizing-shell/</guid>
      <description>Introduction Spawning shells in CTFs and pentesting is an extremely common task and we don&amp;rsquo;t want to have to deal getting disconnected from target, as well as the inconvenience of using a shell with limited shortcuts and controls. Here are 3 methods to stabilize your shell. Personally, I like to use Technique 1 in CTFs.
Technique 1: Python Applicable to on Linux, since they almost always have Python installed.
python -c &#39;import pty;pty.</description>
    </item>
    
  </channel>
</rss>
