<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google API on Khoshrozeh</title>
    <link>https://akhoshrozeh.github.io/khoshrozeh.com/tags/Google-API/</link>
    <description>Recent content in Google API on Khoshrozeh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Dec 2023 17:23:57 -0500</lastBuildDate><atom:link href="https://akhoshrozeh.github.io/khoshrozeh.com/tags/Google-API/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Server Herd Architecture</title>
      <link>https://akhoshrozeh.github.io/khoshrozeh.com/projects/server-herd-architecture/</link>
      <pubDate>Sun, 24 Dec 2023 17:23:57 -0500</pubDate>
      
      <guid>https://akhoshrozeh.github.io/khoshrozeh.com/projects/server-herd-architecture/</guid>
      <description>Context This is a project I did from UCLA where I implemented a server herd architecture in Python. The idea for the architecture comes from the application server being a bottleneck. In the server herd architecture, multiple application servers communicate directly with each other and the core database, handling rapidly evolving data while the database manages more stable, less frequently accessed information. This project also explores using the asyncio library for communication.</description>
    </item>
    
  </channel>
</rss>
